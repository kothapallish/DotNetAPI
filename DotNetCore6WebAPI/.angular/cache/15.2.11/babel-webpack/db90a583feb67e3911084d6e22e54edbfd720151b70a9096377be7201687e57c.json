{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/person.service\";\nimport * as i3 from \"@angular/common\";\nfunction PersonComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class PersonComponent {\n  constructor(fb, personService) {\n    this.fb = fb;\n    this.personService = personService;\n    this.personForm = this.fb.group({\n      name: ['', Validators.required],\n      address: ['']\n    });\n  }\n  onSubmit() {\n    if (this.personForm && this.personForm.valid) {\n      this.personService.addPerson(this.personForm.value).subscribe(response => {\n        console.log('Person added', response);\n      });\n    }\n  }\n  static {\n    this.ɵfac = function PersonComponent_Factory(t) {\n      return new (t || PersonComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.PersonService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PersonComponent,\n      selectors: [[\"app-person\"]],\n      decls: 13,\n      vars: 3,\n      consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"name\"], [\"id\", \"name\", \"formControlName\", \"name\"], [4, \"ngIf\"], [\"for\", \"address\"], [\"id\", \"address\", \"formControlName\", \"address\"], [\"type\", \"submit\", 3, \"disabled\"]],\n      template: function PersonComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n          i0.ɵɵtext(2, \"Add Person\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function PersonComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(4, \"label\", 1);\n          i0.ɵɵtext(5, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(6, \"input\", 2);\n          i0.ɵɵtemplate(7, PersonComponent_div_7_Template, 2, 0, \"div\", 3);\n          i0.ɵɵelementStart(8, \"label\", 4);\n          i0.ɵɵtext(9, \"Address\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(10, \"input\", 5);\n          i0.ɵɵelementStart(11, \"button\", 6);\n          i0.ɵɵtext(12, \"Submit\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.personForm);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.personForm.get(\"name\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.personForm.get(\"name\")) == null ? null : tmp_1_0.touched));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"disabled\", ctx.personForm.invalid);\n        }\n      },\n      dependencies: [i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\"form[_ngcontent-%COMP%] {\\n  max-width: 400px;\\n  margin: 50px auto;\\n  padding: 20px;\\n  background-color: #f9f9f9;\\n  border: 1px solid #ccc;\\n  border-radius: 10px;\\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\\n}\\n\\nlabel[_ngcontent-%COMP%] {\\n  display: block;\\n  margin-bottom: 8px;\\n  font-weight: bold;\\n  color: #333;\\n}\\n\\ninput[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 10px;\\n  margin-bottom: 20px;\\n  border: 1px solid #ccc;\\n  border-radius: 5px;\\n  box-sizing: border-box;\\n  font-size: 16px;\\n}\\n\\ninput[_ngcontent-%COMP%]:focus {\\n  border-color: #007bff;\\n  outline: none;\\n  box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 10px;\\n  background-color: #007bff;\\n  border: none;\\n  border-radius: 5px;\\n  color: white;\\n  font-size: 16px;\\n  cursor: pointer;\\n  transition: background-color 0.3s ease;\\n}\\n\\nbutton[_ngcontent-%COMP%]:disabled {\\n  background-color: #ccc;\\n  cursor: not-allowed;\\n}\\n\\nbutton[_ngcontent-%COMP%]:not(:disabled):hover {\\n  background-color: #0056b3;\\n}\\n\\ndiv[_ngcontent-%COMP%] {\\n  color: red;\\n  font-size: 14px;\\n  margin-bottom: 15px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9wZXJzb24vcGVyc29uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHlCQUFBO0FBQ0E7RUFDSSxnQkFBQTtFQUNBLGlCQUFBO0VBQ0EsYUFBQTtFQUNBLHlCQUFBO0VBQ0Esc0JBQUE7RUFDQSxtQkFBQTtFQUNBLHlDQUFBO0FBQ0o7O0FBRUU7RUFDRSxjQUFBO0VBQ0Esa0JBQUE7RUFDQSxpQkFBQTtFQUNBLFdBQUE7QUFDSjs7QUFFRTtFQUNFLFdBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxzQkFBQTtFQUNBLGtCQUFBO0VBQ0Esc0JBQUE7RUFDQSxlQUFBO0FBQ0o7O0FBRUU7RUFDRSxxQkFBQTtFQUNBLGFBQUE7RUFDQSwwQ0FBQTtBQUNKOztBQUVFO0VBQ0UsV0FBQTtFQUNBLGFBQUE7RUFDQSx5QkFBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLFlBQUE7RUFDQSxlQUFBO0VBQ0EsZUFBQTtFQUNBLHNDQUFBO0FBQ0o7O0FBRUU7RUFDRSxzQkFBQTtFQUNBLG1CQUFBO0FBQ0o7O0FBRUU7RUFDRSx5QkFBQTtBQUNKOztBQUVFO0VBQ0UsVUFBQTtFQUNBLGVBQUE7RUFDQSxtQkFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLyogcGVyc29uLmNvbXBvbmVudC5jc3MgKi9cclxuZm9ybSB7XHJcbiAgICBtYXgtd2lkdGg6IDQwMHB4O1xyXG4gICAgbWFyZ2luOiA1MHB4IGF1dG87XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y5ZjlmOTtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgYm94LXNoYWRvdzogMCAycHggMTBweCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgfVxyXG4gIFxyXG4gIGxhYmVsIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogOHB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICBjb2xvcjogIzMzMztcclxuICB9XHJcbiAgXHJcbiAgaW5wdXQge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gIH1cclxuICBcclxuICBpbnB1dDpmb2N1cyB7XHJcbiAgICBib3JkZXItY29sb3I6ICMwMDdiZmY7XHJcbiAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgYm94LXNoYWRvdzogMCAwIDVweCByZ2JhKDAsIDEyMywgMjU1LCAwLjUpO1xyXG4gIH1cclxuICBcclxuICBidXR0b24ge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2JmZjtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcyBlYXNlO1xyXG4gIH1cclxuICBcclxuICBidXR0b246ZGlzYWJsZWQge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2NjYztcclxuICAgIGN1cnNvcjogbm90LWFsbG93ZWQ7XHJcbiAgfVxyXG4gIFxyXG4gIGJ1dHRvbjpub3QoOmRpc2FibGVkKTpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA1NmIzO1xyXG4gIH1cclxuICBcclxuICBkaXYge1xyXG4gICAgY29sb3I6IHJlZDtcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbiAgfVxyXG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;ICK/DC,2BAAgF;IAC9EA,kCACF;IAAAA,iBAAM;;;ADCV,OAAM,MAAOC,eAAe;EAG1BC,YAAoBC,EAAe,EAAUC,aAA4B;IAArD,OAAE,GAAFD,EAAE;IAAuB,kBAAa,GAAbC,aAAa;IACxD,IAAI,CAACC,UAAU,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC9BC,IAAI,EAAE,CAAC,EAAE,EAAER,UAAU,CAACS,QAAQ,CAAC;MAC/BC,OAAO,EAAE,CAAC,EAAE;KACb,CAAC;EACJ;EAEAC,QAAQ;IACN,IAAI,IAAI,CAACL,UAAU,IAAI,IAAI,CAACA,UAAU,CAACM,KAAK,EAAE;MAC5C,IAAI,CAACP,aAAa,CAACQ,SAAS,CAAC,IAAI,CAACP,UAAU,CAACQ,KAAK,CAAC,CAChDC,SAAS,CAACC,QAAQ,IAAG;QACpBC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,QAAQ,CAAC;MACvC,CAAC,CAAC;;EAER;;;uBAjBWd,eAAe;IAAA;EAAA;;;YAAfA,eAAe;MAAAiB;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UCR5BtB,2BAAK;UACCA,0BAAU;UAAAA,iBAAK;UACrBA,+BAAuD;UAAxBA;YAAA,OAAYuB,cAAU;UAAA,EAAC;UAClDvB,gCAAkB;UAAAA,oBAAI;UAAAA,iBAAQ;UAC9BA,2BAAwC;UACxCA,gEAEM;UAENA,gCAAqB;UAAAA,uBAAO;UAAAA,iBAAQ;UACpCA,4BAA8C;UAE9CA,kCAAsD;UAAAA,uBAAM;UAAAA,iBAAS;;;;UAVnEA,eAAwB;UAAxBA,0CAAwB;UAGpBA,eAAwE;UAAxEA,6KAAwE;UAOxDA,eAA+B;UAA/BA,iDAA+B","names":["Validators","i0","PersonComponent","constructor","fb","personService","personForm","group","name","required","address","onSubmit","valid","addPerson","value","subscribe","response","console","log","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\DotNet6Angular15-CrudOperations\\Angular15Crud\\src\\app\\components\\person\\person.component.ts","D:\\DotNet6Angular15-CrudOperations\\Angular15Crud\\src\\app\\components\\person\\person.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { PersonService } from 'src/app/services/person.service';\n\n@Component({\n  selector: 'app-person',\n  templateUrl: './person.component.html',\n  styleUrls: ['./person.component.scss']\n})\nexport class PersonComponent {\n  personForm: FormGroup;\n\n  constructor(private fb: FormBuilder, private personService: PersonService) {\n    this.personForm = this.fb.group({\n      name: ['', Validators.required],\n      address: ['']\n    });\n  }\n\n  onSubmit() {\n    if (this.personForm && this.personForm.valid) {\n      this.personService.addPerson(this.personForm.value)\n        .subscribe(response => {\n          console.log('Person added', response);\n        });\n    }\n  }\n}\n","\n<div>\n  <h1>Add Person</h1>\n<form [formGroup]=\"personForm\" (ngSubmit)=\"onSubmit()\">\n    <label for=\"name\">Name</label>\n    <input id=\"name\" formControlName=\"name\">\n    <div *ngIf=\"personForm.get('name')?.invalid && personForm.get('name')?.touched\">\n      Name is required\n    </div>\n  \n    <label for=\"address\">Address</label>\n    <input id=\"address\" formControlName=\"address\">\n  \n    <button type=\"submit\" [disabled]=\"personForm.invalid\">Submit</button>\n  </form>\n</div>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}